services:
  caddy:
    build:
      context: .
      dockerfile_inline: |
        FROM caddy:2-builder-alpine AS builder
        RUN xcaddy build \
            --with github.com/caddy-dns/cloudflare \
            --with github.com/mholt/caddy-l4
        FROM caddy:2-alpine
        COPY --from=builder /usr/bin/caddy /usr/bin/caddy
    container_name: caddy
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"
      - "${CS2_PORT}:27015/udp"
      - "${CS2_RCON_PORT}:27025/tcp"
      - "${TEAMSPEAK_VOICE_PORT}:9987/udp"
      - "${TEAMSPEAK_QUERY_PORT}:10011/tcp"
      - "${TEAMSPEAK_FILES_PORT}:30033/tcp"
    volumes:
      - ${SSD_PATH}/actions-runner/_work/romulus/romulus/configs/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ${SSD_PATH}/caddy/data:/data
      - ${SSD_PATH}/caddy/config:/config
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - DOMAIN=${DOMAIN}
      - PROMETHEUS_AUTH_USER=${PROMETHEUS_AUTH_USER}
      - PROMETHEUS_AUTH_HASH=${PROMETHEUS_AUTH_HASH}
    mem_limit: 512m
    cpus: 1
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "caddy", "validate", "--config", "/etc/caddy/Caddyfile"]
      interval: 30s
      timeout: 10s
      retries: 3

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:1.15.1
    container_name: cloudflare-ddns
    restart: unless-stopped
    networks:
      - frontend
    environment:
      - CF_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAINS=${CLOUDFLARE_DOMAINS}
      - PROXIED=false
      - IP6_PROVIDER=none
      - UPDATE_CRON=@every 5m
    mem_limit: 64m
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "echo 'healthy'"]
      interval: 300s
      timeout: 5s
      retries: 1


